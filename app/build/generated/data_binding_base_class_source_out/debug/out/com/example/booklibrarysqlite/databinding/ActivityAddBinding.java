// Generated by view binder compiler. Do not edit!
package com.example.booklibrarysqlite.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.booklibrarysqlite.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText bookAuthor;

  @NonNull
  public final EditText bookPages;

  @NonNull
  public final EditText bookTitle;

  @NonNull
  public final Button saveButton;

  private ActivityAddBinding(@NonNull ConstraintLayout rootView, @NonNull EditText bookAuthor,
      @NonNull EditText bookPages, @NonNull EditText bookTitle, @NonNull Button saveButton) {
    this.rootView = rootView;
    this.bookAuthor = bookAuthor;
    this.bookPages = bookPages;
    this.bookTitle = bookTitle;
    this.saveButton = saveButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bookAuthor;
      EditText bookAuthor = ViewBindings.findChildViewById(rootView, id);
      if (bookAuthor == null) {
        break missingId;
      }

      id = R.id.bookPages;
      EditText bookPages = ViewBindings.findChildViewById(rootView, id);
      if (bookPages == null) {
        break missingId;
      }

      id = R.id.bookTitle;
      EditText bookTitle = ViewBindings.findChildViewById(rootView, id);
      if (bookTitle == null) {
        break missingId;
      }

      id = R.id.saveButton;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      return new ActivityAddBinding((ConstraintLayout) rootView, bookAuthor, bookPages, bookTitle,
          saveButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
